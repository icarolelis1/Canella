#version 450
#include  "common.glsl"
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0, r32f) uniform writeonly image2D HIzMip;
layout(binding = 1) uniform sampler2D depth_sampler;

layout(push_constant) uniform block
{
	vec4 imageSize;
    vec2 aabb_min;
    vec2 aabb_max;
};

void main()
{
	uvec2 pos = gl_GlobalInvocationID.xy;
	float depth = texture(depth_sampler, (vec2(pos) + vec2(0.5)) / imageSize.xy).x;
/*
	float depth0 = texture(depth_sampler,       (vec2(pos) + vec2(0.5)) / imageSize.xy).x;
	float depth1 = textureOffset(depth_sampler, ((vec2(pos) + vec2(0.5))/ imageSize.xy),ivec2(1, 0)).x;
	float depth2 = textureOffset(depth_sampler, ((vec2(pos) + vec2(0.5))/ imageSize.xy),ivec2(1,  1)).x;
	float depth3 = textureOffset(depth_sampler, ((vec2(pos) + vec2(0.5))/ imageSize.xy),ivec2( 0,  1)).x;
*/

	//float depth_min  = max(max(depth0,depth1),max(depth2,depth3));
	imageStore(HIzMip, ivec2(pos), vec4((depth )));
}
